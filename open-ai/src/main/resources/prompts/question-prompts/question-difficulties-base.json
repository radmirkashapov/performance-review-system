{
  "questions": {
    "TRAINEE": "Какие основные принципы объектно-ориентированного программирования применяются в языке C++?",
    "JUNIOR_MINUS": "Что такое класс в языке C++ и как его объявить?",
    "JUNIOR": "Какие виды доступа к членам класса существуют в C++ и чем они отличаются друг от друга?",
    "JUNIOR_PLUS": "Что такое конструктор класса в C++ и какие типы конструкторов могут быть объявлены?",
    "MIDDLE_MINUS": "Что такое наследование в языке C++ и как оно реализуется?",
    "MIDDLE": "Что такое полиморфизм в C++ и какие его типы можно использовать?",
    "MIDDLE_PLUS": "Что такое виртуальные функции в C++ и зачем их использовать?",
    "SENIOR_MINUS": "Какие механизмы обработки исключений предусмотрены в C++ и как их использовать?",
    "SENIOR": "Что такое шаблоны (templates) в языке C++ и как они могут быть использованы?",
    "SENIOR_PLUS": "Какие особенности множественного наследования есть в C++ и как можно решить проблемы, связанные с ним?",
    "LEAD_MINUS": "Что такое RAII (ресурсы при инициализации, ресурсы при завершении) и как он применяется в C++?",
    "LEAD": "Какие новые возможности предоставляет стандарт C++11 и выше для программирования в стиле ООП?",
    "LEAD_PLUS": "Какие практики и принципы программирования следует применять при разработке больших проектов на C++?"
  },
  "prompt": "Примеры состава вопросов по теме \"ООП на C++\" для сложностей [TRAINEE, MIDDLE, SENIOR] согласно их порядку: [\"Что дают разные модификаторы при наследовании?\", \"Как защитить объект от копирования?\", \"Как сгенерировать pure virtual function call исключение?\"]."
}
